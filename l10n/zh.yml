##\
# This file is a part of the phpMussel\CLI package.
# Homepage: https://phpmussel.github.io/
#
# PHPMUSSEL COPYRIGHT 2013 AND BEYOND BY THE PHPMUSSEL TEAM.
#
# License: GNU/GPLv2
# @see LICENSE.txt
#
# This file: Chinese (simplified) language data (last modified: 2022.08.21).
#
# Regarding translations: My native language is English. Because this is a free
# and open-source hobby project which generates zero income, and translatable
# content is likely to change as the features and functionality supported by
# the project changes, it doesn't make sense for me to spend money for
# translations. Because I'm the sole author/developer/maintainer for the
# project and I'm not a ployglot, any translations I produce are very likely to
# contain errors. Sorry, but realistically, that won't ever change. If you find
# any such errors/typos/mistakes/etc, your assistance to correct them would be
# very much appreciated. Pull requests are invited and encouraged. Otherwise,
# if you find these errors too much to handle, just stick with the original
# English source. If a translation is irredeemably incomprehensible, let me
# know which, and I can delete it. If you're not sure how to perform pull
# requests, ask. I can help.
##/

bad_command: "我不明白的命令，对不起。"
cli_algo_not_supported: "指定的算法不支持。"
cli_failed_to_complete: "完成扫描过程失败"
cli_is_not_a: "%s不是文件或文件夹。"
cli_ln2: |
 谢谢对于使用phpMussel，一个PHP脚本旨在检测木马，病毒，恶意软件，
 和其他威胁在文件上传到您的系统随地这个脚本是叫，
 根据ClamAV的签名和其他签名。
                                     ~ ~ ~
 PHPMUSSEL版权2013和此后GNU/GPLv.2通过Caleb M （Maikuolan）。
                                     ~ ~ ~
cli_ln3: |
 目前经营phpMussel在CLI模式（命令行界面）。扫描一个文件或文件夹，键入“scan”，
 其次是名的文件或文件夹您想phpMussel扫描然后按Enter键。
 键入“c”然后按Enter键对于CLI模式命令名单。键入“q”然后按Enter键对于戒烟。
cli_pe1: "不PE文件！"
cli_pe2: "PE部分:"
cli_signature_placeholder: "签名名称"
cli_working: "进行中"
cli_commands: |
 q | quit | exit -- 戒烟CLI模式。

 hash_file:[算法] [文件名] -- 生成哈希签名从文件。

 hash:[算法] [数据] -- 生成哈希签名从数据。
 例子： >> hash:crc32b Hello World
        4a17b156:11:签名名称

 algo -- 列出所有支持的算法。

 hex_encode [数据] -- 兑换从二进制数据至十六进制。
 例子： >> hex_encode Hello World
        48656c6c6f20576f726c64

 hex_decode [数据] -- 兑换从十六进制二进制数据至。

 (base64_encode | b) [数据] -- 兑换从二进制数据至基地64数据。

 base64_decode [数据] -- 兑换从基地64数据至二进制数据。

 pe_meta [文件名] -- 从PE文件中提取元数据。

 url_sig [数据] -- 生成URL扫描器签名。

 (scan | s) [文件名] -- 扫描文件或文件夹。

 c -- 打印此命令列表。
invalid_url: "无效的网址！"
